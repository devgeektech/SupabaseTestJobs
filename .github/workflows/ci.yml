name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint micro-actions dataset
        run: |
          set -euo pipefail
          npm run -s lint:micro-actions | tee micro_actions_lint.txt
          grep -Eo 'Checksum \(sha256 of sorted IDs\): [0-9a-f]+' micro_actions_lint.txt | sed 's/^Checksum (sha256 of sorted IDs): //' > micro_actions_checksum.txt
          echo "### Micro-actions Lint Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Checksum (sha256 of sorted IDs): \`$(cat micro_actions_checksum.txt)\`" >> $GITHUB_STEP_SUMMARY

      - name: Show canonical sample row
        run: |
          echo "Canonical CSV sample row (header + row):"
          cat data/canonical_sample_row.csv

      - name: Upload lint outputs and sample CSV
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: micro-actions-artifacts
          path: |
            micro_actions_lint.txt
            micro_actions_checksum.txt
            data/canonical_sample_row.csv

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1

      - name: Build with secrets
        continue-on-error: true
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: doppler run -- npm run build

      - name: Test with secrets
        continue-on-error: true
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: doppler run -- npm test -- --ci

      - name: Verify secrets injected (redacted)
        continue-on-error: true
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: |
          doppler run -- bash -lc '
            echo "HAS_SENTRY_DSN=${SENTRY_DSN:+yes}";
            echo "HAS_RC_KEY=${REVENUECAT_SECRET_API_KEY:+yes}";
            echo "HAS_FCM_CREDS=${FIREBASE_SERVICE_ACCOUNT_B64:+yes}";
          '

      - name: Smoke test /health
        continue-on-error: true
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: |
          set -euo pipefail
          doppler run -- bash -lc 'node src/index.js & echo $! > server.pid'
          for i in $(seq 1 15); do
            if curl -fsS http://localhost:3000/health; then
              ok=1; break; 
            fi
            sleep 1
          done
          test -n "${ok:-}"
          kill "$(cat server.pid)" || true

      - name: Gitleaks scan
        continue-on-error: true
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact -v

      - name: Install TruffleHog CLI
        continue-on-error: true
        run: |
          python3 -m pip install --user --upgrade trufflehog
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: TruffleHog scan (CLI)
        continue-on-error: true
        run: |
          trufflehog filesystem . --only-verified --fail
